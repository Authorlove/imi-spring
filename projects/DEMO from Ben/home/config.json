{
    /**
     * 工作目录, 可以是相对路径或者绝对路径
     * 
     * @optional
     * @default 运行 ispriter 命令时所在的目录
     * @example
     * "./": 当前运行目录, 默认值
     * "../": 当前目录的上一级
     * "/data": 根目录下的 data 目录
     * "D:\\sprite": D 盘下的 sprite 目录
     */
    "workspace": "./",

    "input": {

        /**
         * 原 cssRoot
         * 需要进行精灵图合并的 css 文件路径或文件列表, 单个时使用字符串, 多个时使用数组.
         * 路径可使用 ant 风格的路径写法
         * 
         * @required 
         * @example
         * "cssSource": "../css/";
         * "cssSource": ["../css/style.css", "../css2/*.css"]
         */
        "cssSource": ["./css/loginpage.css"],

        /**
         * 排除不想合并的图片, 可使用通配符
         * 也可以直接在 css 文件中, 在不想合并的图片 url 后面添加 #unsprite, iSpriter 会排除该图片, 并把 #unsprite 删除
         * 
         * @optional
         * @example
         * "ignoreImages": "icons/*"
         * "ignoreImages": ["icons/*", "loading.png"]
         */


        /**
         * 输出的精灵图的格式, 目前只支持输出 png 格式, 
         * 如果是其他格式, 也是以PNG格式输出, 仅仅把后缀改为所指定后缀
         * 
         * @optional 
         * @default "png"
         */
        "format": "png"
    },
    "output": {

        /**
         * 原 cssRoot
         * 精灵图合并之后, css 文件的输出目录
         * 
         * @optional 
         * @default "./sprite/css/"
         */
        "cssDist": "./sprite/css/",

        /**
         * 原 imageRoot
         * 生成的精灵图相对于 cssDist 的路径, 最终会变成合并后的的图片路径写在 css 文件中
         * 
         * @optional
         * @default "./img/"
         * @example
         * 如果指定 imageDist 为 "./images/sprite/", 则在输出的 css 中会显示为
         * background: url("./images/sprite/sprite_1.png");
         * 
         */
        "imageDist": "./img/",

       
         "combineCSSRule": false
        
    }
}